//
//  NearlyActivityViewController.m
//  Burning
//
//  Created by wei_zhu on 15/6/22.
//  Copyright (c) 2015年 BurningTech. All rights reserved.
//

#import "NearlyActivityViewController.h"
#import "CreateActivityViewController.h"
#import <CoreLocation/CoreLocation.h>
#import "LCActivity.h"
#import "ActivityTableViewCell.h"
#import <MJRefresh.h>
#import "ActivityDetailViewController.h"
#import "SVGloble.h"

#define LOADCOUNT 4

//@implementation CLLocationManager (TemporaryHack)
//
////模拟器测试用
//- (void)hackLocationFix
//{
//    //CLLocation *location = [[CLLocation alloc] initWithLatitude:42 longitude:-50];
//    float latitude = 39.906811;
//    float longitude = 116.377586;  //这里可以是任意的经纬度值
//    CLLocation *location= [[CLLocation alloc] initWithLatitude:latitude longitude:longitude];
//    //    [[self delegate] locationManager:self didUpdateToLocation:location fromLocation:nil];
//    [[self delegate] locationManager:self didUpdateLocations:[NSArray arrayWithObject:location]];
//}
//
//-(void)startUpdatingLocation
//{
//    [self performSelector:@selector(hackLocationFix) withObject:nil afterDelay:0.1];
//}
//
//@end

@interface NearlyActivityViewController ()<CLLocationManagerDelegate,UITableViewDataSource,UITableViewDelegate>

@property(nonatomic,strong) CLLocationManager *locationManager;

@property(nonatomic,strong)CLLocation *curLocation;

@property(nonatomic,strong) NSMutableArray *lcActivitys;

@property(nonatomic,assign)NSInteger curLoadMoreCount;

@property(nonatomic,strong)UITableView *activityTableView;

@property(nonatomic,strong)UILabel *unLocationPromtLable;

@end

@implementation NearlyActivityViewController

-(instancetype)init{
    self  = [super init];
    if (self) {
        self.title = @"附近活动";
    }
    return self;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    [self setNavgationBar];
    self.automaticallyAdjustsScrollViewInsets = NO;
    self.activityTableView = [[UITableView alloc]initWithFrame:CGRectMake(0, 0, [SVGloble shareInstance].globleWidth,[SVGloble shareInstance].globleAllHeight-kStatusBarHeight-kNavigationBarHeight)];
    [self.view addSubview:self.activityTableView];
    
    self.activityTableView.dataSource = self;
    self.activityTableView.delegate = self;
    
    //分割线从最左边画
    if ([self.activityTableView respondsToSelector:@selector(setSeparatorInset:)]) {
        [self.activityTableView setSeparatorInset:UIEdgeInsetsZero];
    }
    if ([self.activityTableView respondsToSelector:@selector(setLayoutMargins:)]) {
        [self.activityTableView setLayoutMargins:UIEdgeInsetsZero];
    }
    
    //空余cell没有分割线
    UIView *view = [UIView new];
    view.backgroundColor = [UIColor clearColor];
    [self.activityTableView setTableFooterView:view];
    
    CLAuthorizationStatus status =  [CLLocationManager authorizationStatus];
    if (status ==2) {
        self.unLocationPromtLable.hidden = NO;
    }
    else{
        self.unLocationPromtLable.hidden = YES;

        //headRefresh
        [self.activityTableView addLegendHeaderWithRefreshingTarget:self refreshingAction:@selector(loadData)];
        //__weak typeof(self) weakSelf = self;
        [self.activityTableView.header setTitle:@"加载中..." forState:MJRefreshHeaderStateRefreshing];
        [self.activityTableView.header setTitle:@"下拉刷新" forState:MJRefreshHeaderStateIdle];
        [self.activityTableView.header setTitle:@"松开刷新数据" forState:MJRefreshHeaderStatePulling];
        self.activityTableView.header.font = [UIFont systemFontOfSize:kCommonFontSize];
        self.activityTableView.header.textColor = RGB(133, 133, 133);
        [self.activityTableView.header setUpdatedTimeHidden:YES];
        
        //    [self.activityTableView.header beginRefreshing];
        
        //footRefresh
        [self.activityTableView addLegendFooterWithRefreshingTarget:self refreshingAction:@selector(loadMoreData)];
        [self.activityTableView.footer setTitle:@"加载中..." forState:MJRefreshFooterStateRefreshing];
        [self.activityTableView.footer setTitle:@"" forState:MJRefreshFooterStateIdle];
        [self.activityTableView.footer setTitle:@"" forState:MJRefreshFooterStateNoMoreData];
        self.activityTableView.footer.font= [UIFont systemFontOfSize:kCommonFontSize];
        self.activityTableView.footer.textColor = RGB(133, 133, 133);

        [self startLocations];
    }
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

-(void)setNavgationBar{
    UIBarButtonItem *rightBarItem = [[UIBarButtonItem alloc] initWithTitle:@"创建" style:UIBarButtonItemStyleBordered target:self action:@selector(createActivity:)];
    
    self.navigationItem.rightBarButtonItem = rightBarItem;
}

-(void)startLocations{
    self.locationManager = [[CLLocationManager alloc]init];
    if ([CLLocationManager locationServicesEnabled]) {
        NSLog( @"Starting CLLocationManager" );
        self.locationManager.delegate = self;
        self.locationManager.distanceFilter = 200;
        self.locationManager.desiredAccuracy = kCLLocationAccuracyBest;
        
        if([self.locationManager respondsToSelector:@selector(requestAlwaysAuthorization)]) {
            [self.locationManager requestAlwaysAuthorization]; // 永久授权
            [self.locationManager requestWhenInUseAuthorization]; //使用中授权
        }
        
        [self.locationManager startUpdatingLocation];
    }
    else {
        NSLog( @"Cannot Starting CLLocationManager" );
        self.locationManager.delegate = self;
        self.locationManager.distanceFilter = 200;
        self.locationManager.desiredAccuracy = kCLLocationAccuracyBest;
        [self.locationManager startUpdatingLocation];
    }
}

-(void)loadData{
    CLAuthorizationStatus status =  [CLLocationManager authorizationStatus];
    if (status ==2) {
        self.unLocationPromtLable.hidden = NO;
        self.lcActivitys = nil;
        [self.activityTableView reloadData];
        return;
    }
    self.unLocationPromtLable.hidden = YES;
    [self.lcDataHelper getActivityWithlimit:LOADCOUNT skip:0 latitude:_curLocation.coordinate.latitude longitude:_curLocation.coordinate.longitude block:^(NSArray *objects, NSError *error) {
        if (error) {
            [self alert:@"获取数据失败"];
            return ;
        }
        self.lcActivitys = [objects mutableCopy];
        self.curLoadMoreCount  = 1;
        [self.activityTableView reloadData];
        [self.activityTableView.header endRefreshing];
        if (objects.count<LOADCOUNT) {
            self.activityTableView.footer.state = MJRefreshFooterStateNoMoreData;
        }
        else{
            self.activityTableView.footer.state = MJRefreshFooterStateIdle;
        }
    }];
}

-(void)loadMoreData{
    CLAuthorizationStatus status =  [CLLocationManager authorizationStatus];
    if (status ==2) {
        self.unLocationPromtLable.hidden = NO;
        self.lcActivitys = nil;
        [self.activityTableView reloadData];
        return;
    }
    self.unLocationPromtLable.hidden = YES;
    [self.lcDataHelper getActivityWithlimit:LOADCOUNT skip:LOADCOUNT*self.curLoadMoreCount latitude:_curLocation.coordinate.latitude longitude:_curLocation.coordinate.longitude block:^(NSArray *objects, NSError *error) {
        if (error) {
            [self alert:@"获取数据失败"];
            return ;
        }
        if (objects.count==0) {
            self.activityTableView.footer.state = MJRefreshFooterStateNoMoreData;
        }
        else{
            if(self.lcActivitys ==nil){
                self.lcActivitys = [NSMutableArray array];
            }
            [self.lcActivitys addObjectsFromArray:objects];
            self.curLoadMoreCount++;
            [self.activityTableView reloadData];
            [self.activityTableView.footer endRefreshing];
        }

    }];
}

-(UILabel*)unLocationPromtLable{

    if (_unLocationPromtLable==nil) {
        _unLocationPromtLable = [[UILabel alloc]initWithFrame:CGRectMake(0, 60, [SVGloble shareInstance].globleWidth, 100)];
        _unLocationPromtLable.text = @"无法获取你的位置信息。\n请到手机系统的[设置]->[隐私]->[定\n位服务]中打开定位服务，并允许Burning\n使用定位服务";
        _unLocationPromtLable.textColor = [UIColor blackColor];
        _unLocationPromtLable.font = [UIFont systemFontOfSize:14];
        _unLocationPromtLable.textAlignment = NSTextAlignmentCenter;
        _unLocationPromtLable.numberOfLines = 0;
        [self.view addSubview:_unLocationPromtLable];
    }
    return _unLocationPromtLable;
}

#pragma mark CLLocationManagerDelegate
-(void)locationManager:(CLLocationManager *)manager didUpdateLocations:(NSArray *)locations{
    _curLocation = [locations lastObject];
    [manager stopUpdatingLocation];
    [self loadData];
}

#pragma mark TableViewDataSource delegate

-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return self.lcActivitys.count;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    return 140;
}

-(UITableViewCell*)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    ActivityTableViewCell *activityCell= [tableView dequeueReusableCellWithIdentifier:@"activityCell"];
    if(activityCell==nil){
        NSArray *array = [[NSBundle mainBundle] loadNibNamed:@"ActivityTableViewCell" owner:self options:nil];
        activityCell = [array objectAtIndex:0];
        activityCell.selectionStyle = UITableViewCellSelectionStyleNone;
    }
    activityCell.lcActivity=self.lcActivitys[indexPath.row];
    return activityCell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    ActivityDetailViewController *activityDetailVC = [[ActivityDetailViewController alloc]init];
    activityDetailVC.lcActivity = self.lcActivitys[indexPath.row];
    [self.navigationController pushViewController:activityDetailVC animated:YES];
}

- (void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath
{
    if ([cell respondsToSelector:@selector(setSeparatorInset:)]) {
        [cell setSeparatorInset:UIEdgeInsetsZero];
    }
    if ([cell respondsToSelector:@selector(setLayoutMargins:)]) {
        [cell setLayoutMargins:UIEdgeInsetsZero];
    }
}

#pragma mark action
-(void)createActivity:(UIButton*)send{
    CreateActivityViewController *createActivityVC = [[CreateActivityViewController alloc]init];
    [self.navigationController pushViewController:createActivityVC animated:YES];
}

@end
