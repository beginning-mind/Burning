//
//  BodyBuildingMainViewController.m
//  Burning
//
//  Created by 李想 on 15/5/22.
//  Copyright (c) 2015年 BurningTech. All rights reserved.
//

#import "BodyBuildingMainViewController.h"
#import "BurningNavControl.h"
#import "BodyBuildingGroupTableCell.h"
#import "LCBodyBuilding.h"
#import "SHBodyBuilding.h"
#import <MJRefresh.h>
#import "ModelTransfer.h"
#import "BodyBuildingViewController.h"
#import "SVGloble.h"

@interface BodyBuildingMainViewController ()

@property(nonatomic,strong)NSMutableArray *shBodyBuildingGroups;

@property(nonatomic,strong)NSMutableArray *lcBodyBuildings;

@end

@implementation BodyBuildingMainViewController

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
        self.showTabbar = YES;
        [self setTitle:@"课程"];
    }
    return self;
}

- (void)viewDidLoad{
    [super viewDidLoad];
    
    self.tableView.dataSource = self;
    self.tableView.delegate = self;
    
    //和heightForHeaderInSection配合设置间隔
    self.tableView.sectionFooterHeight=0;
    
    //headRefresh
    [self.tableView addLegendHeaderWithRefreshingTarget:self refreshingAction:@selector(loadData)];
    //__weak typeof(self) weakSelf = self;
    [self.tableView.header setTitle:@"加载中..." forState:MJRefreshHeaderStateRefreshing];
    [self.tableView.header setUpdatedTimeHidden:YES];
    [self.tableView.header beginRefreshing];
}

- (void)didReceiveMemoryWarning{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

-(void)loadData{
    [self.lcDataHelper getBodyBuildingBlock: ^(NSArray *objects, NSError *error) {
        self.lcBodyBuildings = [objects mutableCopy];
        NSMutableArray *curBodyBuildingGroups = [NSMutableArray array];
        NSMutableArray *groupArry =[NSMutableArray array];
        for (LCBodyBuilding *lcBodyBuilding in objects) {
            NSString *curGroup = lcBodyBuilding.group;
            if (![groupArry containsObject:curGroup]) {
                [curBodyBuildingGroups addObject:[ModelTransfer lcBodyBuildingToSHBodyBuildingGroup:lcBodyBuilding]];
                [groupArry addObject:curGroup];
            }
        }
        self.shBodyBuildingGroups = curBodyBuildingGroups;
        [self.tableView reloadData];
        [self.tableView.header endRefreshing];
    }];
}

#pragma mark tableViewDelegate
-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    return self.shBodyBuildingGroups.count;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return 1;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    SHBodyBuildingGroup *curShBodyBuilding =self.shBodyBuildingGroups[indexPath.section];
    //test
    NSString *title = curShBodyBuilding.group;
    UIImage *image;
    if ([title isEqualToString:@"腹"]) {
        image = [UIImage imageNamed:@"fu375x138_M"];
    }
    else{
        image = [UIImage imageNamed:@"bei_485x178_m"];
    }
    CGFloat imgW = image.size.width;
    CGFloat imgH = image.size.height;
    
//    AVFile *backFile = curShBodyBuilding.backFile;
//    NSString *sizestr = [backFile.metaData valueForKey:@"imgSize"];
//    NSArray *sizeArry = [sizestr componentsSeparatedByString:@","];
//    NSString *wStr = sizeArry[0];
//    CGFloat imgW  =wStr.floatValue;
//    NSString *hstr = sizeArry[1];
//    CGFloat imgH = hstr.floatValue;
    CGFloat ration = imgW/imgH;
    return [SVGloble shareInstance].globleWidth/ration;
}

-(UITableViewCell*)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    BodyBuildingGroupTableCell *bodyBuildingCell= [tableView dequeueReusableCellWithIdentifier:@"bodyGroupCell"];
    if(bodyBuildingCell==nil){
        bodyBuildingCell = [[BodyBuildingGroupTableCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"bodyGroupCell"];
    }
    bodyBuildingCell.shBodyBuildingGroup=self.shBodyBuildingGroups[indexPath.section];
    return bodyBuildingCell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    SHBodyBuildingGroup *curShBodyBuilding = self.shBodyBuildingGroups[indexPath.section];
    NSString *group = curShBodyBuilding.group;
    NSMutableArray *shBodyBuildings = [NSMutableArray array];
    for (LCBodyBuilding *curlcBodyBuilding in self.lcBodyBuildings) {
        NSString *curGroup = curlcBodyBuilding.group;
        if ([group isEqual:curGroup]) {
            [shBodyBuildings addObject:[ModelTransfer lcBodyBuildingToSHBodyBuilding:curlcBodyBuilding]];
        }
    }
    BodyBuildingViewController *bodyBuildingViewController = [[BodyBuildingViewController alloc]init];
    bodyBuildingViewController.shBodyBuildings = shBodyBuildings;
    [self.navigationController pushViewController:bodyBuildingViewController animated:YES];
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:( NSInteger )section
{
    return 5.0 ;
}



@end
